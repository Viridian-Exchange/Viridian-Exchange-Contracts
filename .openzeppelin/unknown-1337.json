{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x2DD5a9E3454BD1a2C97463A9F40bda520281B600",
    "txHash": "0xe6ee7404f18c928a2ec819aea7752480a52a6001cddbe378fe7750b9ae6d353e"
  },
  "proxies": [
    {
      "address": "0x31fc3061D5999385Ad8f5F0ad1010E4bF67A6DEc",
      "txHash": "0xc2b902fa6986cc2469adc47508011cc911476ecd19047fb50738dca6c52942ed",
      "kind": "transparent"
    },
    {
      "address": "0x1d04B63DC03287538EeA106b4526586e0479d8A9",
      "txHash": "0x2d00b87f2cc1dbf5ad7123009f505080602c3e6a72ac4439e1e01d4242ab31a4",
      "kind": "transparent"
    },
    {
      "address": "0xFB3A4d3dB0A9156AF8b0219100c8108716cC8Dc7",
      "txHash": "0xf0bf004eb9142eb73e4a9ce8273caec71203e513877223ca29e3e0819880a73d",
      "kind": "transparent"
    },
    {
      "address": "0x8a9dA8d45Bc649DAc6F49Ad3CF8b7bb0002779AD",
      "txHash": "0x2fd8aca272443dcd8c44bd163763660284e2bee1d209dd1d01d6edf355c86221",
      "kind": "transparent"
    },
    {
      "address": "0x6712F0D05c78A1fF6Bae908Ae13d7Ea6561A4Cf1",
      "txHash": "0xd8b370e3f66b738757bdb5f1005691066fa252b223cd3dd6d8261baf601c7d54",
      "kind": "transparent"
    },
    {
      "address": "0x2B62E206aE6d534838794a6B86d8b95d1E152554",
      "txHash": "0x65fb941e22712e194816140449fcf95c0df187d0041d1df9eaf1aa89afe5029d",
      "kind": "transparent"
    },
    {
      "address": "0xb7643881f6a6e5feB472B96F56816499AB098423",
      "txHash": "0x47dd57b05b33af56857dcb91d25a9291e3a37bc08abde16811a2a7216eef4914",
      "kind": "transparent"
    },
    {
      "address": "0x8871824a5aAdA4decb38f8d904a1B2cd52ee8DbA",
      "txHash": "0xafbdeb8c8facdddd8651f31ca9d50c2c045be0f5f179176cb81746f3894a7eac",
      "kind": "transparent"
    },
    {
      "address": "0x016D5e1e9B227888056AE38879c06A97C438aedb",
      "txHash": "0x0b7b6c9507987787afae7898eaff6bed677a4e47b126098a622ae4cb4145699c",
      "kind": "transparent"
    },
    {
      "address": "0x8c0535822734AB9048ce0Fd2F1730aDb7d4F7b33",
      "txHash": "0xe603ab11ac607130a22e637a58d47fa4f0b1403dfb0837bee6c68918c3c54e79",
      "kind": "transparent"
    },
    {
      "address": "0xFCc14eFD4fF42eE9728E6C1Ac310693e0a1D7dEa",
      "txHash": "0x1282eab36027d563da038b78d220bf570a5925645e12d3257d3cf8354faad46c",
      "kind": "transparent"
    },
    {
      "address": "0x1100f91888c347b043241240e65914f9bcd2eE63",
      "txHash": "0xf5bd5a237b02f0412e39beeeceb3559711ee852a5eec0a0f6858cbdc1b6403e1",
      "kind": "transparent"
    },
    {
      "address": "0xE9dc811Aa514985719c91943E53bF694a5e2c56d",
      "txHash": "0x5621fef41c3c56f4824a5dfcee909d320cfc1c19c10ec78185b6dbcc966e0737",
      "kind": "transparent"
    },
    {
      "address": "0x9AaFfE4df8660606b23D3478148D1804A6147bc0",
      "txHash": "0xac36416b0e4fc1dba352d82a7746c76c9d809a492eaf5569d5babc03b5a0bece",
      "kind": "transparent"
    },
    {
      "address": "0x9786c05e3a36c71C03C3C7DC308C45340901F89a",
      "txHash": "0xe0ac1282f8f35f4845fb40fcda452ec18503fb0e7c9eab0a2eeb65f8b0d322c3",
      "kind": "transparent"
    },
    {
      "address": "0x131267e463dBbAb9e9000E830F66E1e45B64fDde",
      "txHash": "0xe690f1d1ea542c5130f31b013d6e2c8d74ce2cec5d8e77fb9a2225db4228324a",
      "kind": "transparent"
    },
    {
      "address": "0x6a64f52a0185925b2C83e3240da94B7Ce1cffDf8",
      "txHash": "0xbec1c4d2528e9ed909d7e489430a6308db824d2032c426f03227111fc29e934f",
      "kind": "transparent"
    },
    {
      "address": "0x4f4E3d03A1267871f007C0c2Ac751BEB6D1F0757",
      "txHash": "0x06149dbe4d1be1c744f5930a54fa723bb047e0ed2af915d1bf289363d278919b",
      "kind": "transparent"
    },
    {
      "address": "0xF947C15FB5e4178b0713dD5E364c0e3921421BBE",
      "txHash": "0xe59a97c0c381d49f12c70f3ca2daf2b8e6129963163cd51257c1833238d469cb",
      "kind": "transparent"
    },
    {
      "address": "0xe083ec0A375fF5B90Cd528F965e2C89b8Db7De79",
      "txHash": "0xdbba86f4481e29cba307af8366430d2291f0a6b7835c588182483bf3691d28f1",
      "kind": "transparent"
    },
    {
      "address": "0x8aAC7c5C9033C591952C2C6862F542A932B5c019",
      "txHash": "0x4ef66175468b1bcb1819b515e6aa9e7ca2c013576565da757d08410e9b1ccf65",
      "kind": "transparent"
    },
    {
      "address": "0x2a61393eC8Da18949D15e56201A51424e1e951C8",
      "txHash": "0x421b167f942c88df6f0bddc76ac95c3603b0c852d19a5bd3a51a8e244c4f561f",
      "kind": "transparent"
    },
    {
      "address": "0xa76281349883F45E0ad2C7db75D283CDc43eB1Ad",
      "txHash": "0x241deef5cbc59cb658008dfc75202df2f49cb702664c73d645495330027f45ad",
      "kind": "transparent"
    },
    {
      "address": "0xc3dbA6221e768e6896DA3676d9e9077Aa593C650",
      "txHash": "0x281564cf169af6aba7220087421878a97c4bec14a81e438c18d2a526bf03a7a2",
      "kind": "transparent"
    },
    {
      "address": "0x78Eb7c9164c203BE758Bb728587f0F11DcF502e6",
      "txHash": "0x0c7430e765710ca09b0fc7141b07068e4f6a526a33be1b265caf4e3e7cc4e548",
      "kind": "transparent"
    },
    {
      "address": "0x1AD8E40ecb2bd54a55E652d9EE936D41036293A5",
      "txHash": "0x8301033cce8e9864f217cb71c6e7697ad805d6171a5175b4b63b19f027c47360",
      "kind": "transparent"
    },
    {
      "address": "0x1136bF632c27f6f45E36b16421416A3Ecd49b839",
      "txHash": "0xafe688572c226159fda56cd1c260bfc42f8f847174b4580062bf1203e3d6aea8",
      "kind": "transparent"
    },
    {
      "address": "0x24c173Bea10cDc85D799dA54Bf6C91C1A6174e93",
      "txHash": "0x4a9a6f39b3d8707594a9ce4db822abe9cd41ce42fa643d345ca450f277ef4819",
      "kind": "transparent"
    },
    {
      "address": "0x8172759D2F785c93e6c3a1e9809a4dFf5B7cB2D6",
      "txHash": "0x53e004e03c2c3c93ac1cceefc232aacae7488eb526c18ee2ed29ffbcb715eaa3",
      "kind": "transparent"
    },
    {
      "address": "0x5f45Ef3673860f096de8B1eCaC3e02218409174b",
      "txHash": "0x93daf1c29daddbbcf8141861a5ca48ae3a9909600a3c89714057fe358e4b1ba2",
      "kind": "transparent"
    },
    {
      "address": "0x5deB9FC9Ac264a6f635cd1621313d13fd60cBb61",
      "txHash": "0x1ce89b03adda3790c6a9d3a8d901764daa61397cafb2fbfbc47820d3b2a86682",
      "kind": "transparent"
    },
    {
      "address": "0xa3D96218625A0F45f19FBAAf442E474acc8e4e59",
      "txHash": "0xf234475cfea0c78d560ff46fe6fb5da66df90e7b1aac9c4e03d6421e76e09621",
      "kind": "transparent"
    },
    {
      "address": "0xdD93637F9D5f65db1BA20Fa91B84b2AA7a2E0edF",
      "txHash": "0x045f72355c723ab7c4e16148db18c686d4b7fc78fdd3fd78d682a34ba726cba9",
      "kind": "transparent"
    },
    {
      "address": "0xFf975A65AbF714613E9Db3B7F2D42759889B64f2",
      "txHash": "0x6c8653b3848e21d1f0a78fbd681f14685e7d0711599434308fb4db1d1ba6f3f8",
      "kind": "transparent"
    },
    {
      "address": "0x0A2A8A345064873B690a624CD3bDd5Ec09f92931",
      "txHash": "0x83bf65549e553cc7c46228d15175c2ef390f5380cc3f2259f95cbb6956b82812",
      "kind": "transparent"
    },
    {
      "address": "0x6BB8F05607c82cbC63432646F6A6616CA479B14d",
      "txHash": "0x51648a0af90e39ba3d7fc9e1d2660ae740b1f8c26616f167dd368a053265a205",
      "kind": "transparent"
    },
    {
      "address": "0x36546569CBbD3d0F48110D967a9eA58C3cf62a20",
      "txHash": "0x35b4f2c64a033c3c50e40a02ac04695ef10e6d51b9295ea3da7fd7f290de9396",
      "kind": "transparent"
    },
    {
      "address": "0xab34cA18fa49c55a18c66f55815b14E4a88561cF",
      "txHash": "0xf512d76f3a961d09af82236af762582549c14ba563bcf5fa1bf15d3768bfd01c",
      "kind": "transparent"
    },
    {
      "address": "0x33259DA4F0a20B31374cD9244cad6d94a0a4D0E6",
      "txHash": "0x2ad6b5dbbd68d875a16ec227d7c9333191ede715a1a7d73715db0a983e9870d6",
      "kind": "transparent"
    },
    {
      "address": "0xae237e4b59127c30da7D7744DfF51B8D87E9DD55",
      "txHash": "0x78fba566e560cc3b5fa10d21a3a2d2947b8fea873cc34a1dcc4665df6e09ab62",
      "kind": "transparent"
    },
    {
      "address": "0xDB2943811BD2F47e97301E71f92F9D351B139ff5",
      "txHash": "0x187b8f6a895ac7825e99c54c341b9da372a97542f40595c36aad46de977fa4cf",
      "kind": "transparent"
    },
    {
      "address": "0x84c6b77b071D1D3cFf8ecB0C3d71c8B8ebA3E49F",
      "txHash": "0x9628c9824b80e9c04cca4e660a4873b78b101b40617c638db8e388c7ecf458fc",
      "kind": "transparent"
    },
    {
      "address": "0xAa94DFb263eEBB877e52aD92f932BB0644d215BD",
      "txHash": "0xbede642947b5b696659863fbf7aec78bb557a90e31184e9e9ed32d68fa0867e1",
      "kind": "transparent"
    },
    {
      "address": "0x3B945A3EBFec006403fB96bc91E6Cd12547664Ab",
      "txHash": "0x881e5cd10d7e469376cef13f6c00b4243b57f37609f8bbd92903bdf35544af82",
      "kind": "transparent"
    },
    {
      "address": "0x4C0e136Bf3a9eFD0272d0d2FC246C2E2FeB4e287",
      "txHash": "0x1aab3188c5b2be48c6946d12a991319db81d34abd61d0f3f85f21563e5621a19",
      "kind": "transparent"
    },
    {
      "address": "0xB4861433E64368aEE1bBCbb3063BEB23f635B367",
      "txHash": "0xd3ea5cf5ce4325bda5e932c362ce4be2d85fc29a8a18f06e3cf9856f8ded1f55",
      "kind": "transparent"
    },
    {
      "address": "0xE10cE1Bd222bc80f3f725Aa98cC02B702672e36A",
      "txHash": "0x05f8a0d5d14a9cb54b1e2d48af63b1e0a55cc009eb08c7e260e1aa9acc7d00e3",
      "kind": "transparent"
    },
    {
      "address": "0x3BB13435c7c2e0aa0105e331136c6f766a8663E8",
      "txHash": "0x166ee1a89d8e62a2be8a0cb1e0918930967e08c6f0c1a33da41cd038c593c092",
      "kind": "transparent"
    },
    {
      "address": "0xcB69a757a34a35b244558340929fAD10EE27EbdA",
      "txHash": "0x594634e2c202348115ce7e9c586ac4767758ce6760cbc05c3988572080db4d50",
      "kind": "transparent"
    },
    {
      "address": "0xbBAb3555f840d249efa40611F7B32f7345823583",
      "txHash": "0x433e99b8b79d0513fe3ac6db6b491af8a5972a1f68113435548a75f483a800c8",
      "kind": "transparent"
    },
    {
      "address": "0x02eBf98502Cce1A351Fe153E7474F24579956D9D",
      "txHash": "0xf40a43746e4ec674dc51ba31f43637f521c3775611abbc0706404c377e659f8e",
      "kind": "transparent"
    },
    {
      "address": "0x7cA6b5EB4604d10BDbEb93F3D38F337D8e97a934",
      "txHash": "0xe74cc1c3f80221c5c996e8878a34e7dc135f5b65e02e93f1c82d066b364a4dfd",
      "kind": "transparent"
    },
    {
      "address": "0x5CC651e2072aaa34283dC235696a5ae333907b27",
      "txHash": "0xa4668325937a9a0a73d21c33361b2a4071a8ca578e0366c023931470ed908c7b",
      "kind": "transparent"
    },
    {
      "address": "0x3f8B24abe2807BBcd7FD8ACc3753Dda275Ae899A",
      "txHash": "0x71409d125900eeef227e9b7e7f8a75311e4fb69001261e26d22779c34445b15b",
      "kind": "transparent"
    },
    {
      "address": "0xe5D4C9Dde82e39a1f893B223c5688475c1dE606F",
      "txHash": "0x3d235d7d9dda4413427f21e775b75793bd41601806ee5f33522b10c2424785b3",
      "kind": "transparent"
    },
    {
      "address": "0x3Ab5Cb9D4E889c410A288756351Afb0F3679FC26",
      "txHash": "0xde1c8a7516ff5913dc4a994048135e8d972a8d38f551620321021828ef359407",
      "kind": "transparent"
    },
    {
      "address": "0x4C4B530980B6791c2935d648ab2CB0c51080e693",
      "txHash": "0xc9ae5f8e7a42b91677aa97ac0cbf6cf1a38bb462ce2ad608afec3bf3f9ff29aa",
      "kind": "transparent"
    },
    {
      "address": "0x6DebCAe133D67354934f9027ccE2d7E2fD291Af1",
      "txHash": "0x7de3487ce73a6ea606aea12cf17bde8b9e94a8617854f2db4f69bedd878f3520",
      "kind": "transparent"
    },
    {
      "address": "0x64eF7908BeA03ea6542C11930Adf19D7823e6624",
      "txHash": "0x95815040cc4792d8c48b28c935ea466a80b7a2d9a8193a158c3871c735eb0c6a",
      "kind": "transparent"
    },
    {
      "address": "0xe5Af58160019Ca98a38e367e504276691C692630",
      "txHash": "0x2a8d9a9817db49a6641fad721262de3fa0d689261f2f82a07999e8fbe3a9c0ef",
      "kind": "transparent"
    },
    {
      "address": "0x44F948B0CC4217291B225439285092F050BCC35d",
      "txHash": "0x06cca123bedd9031ed1b20da54d90326015d4d3a8f326e6e4d66556ac25bd45c",
      "kind": "transparent"
    },
    {
      "address": "0x79205519fBE6F91bE522516b40697238aFB1626a",
      "txHash": "0x1e7b159eea40b732e56e437887ed5da4824873d0d220a4048f46d4d5c169e899",
      "kind": "transparent"
    },
    {
      "address": "0x88c0905520703DbB71B95Aa72952ebb3cF498F73",
      "txHash": "0x0a24e0a99b7e046d7ba2bb15006da8bb86ad5815b89205c77f8b1b90ba5c8557",
      "kind": "transparent"
    }
  ],
  "impls": {
    "f65635ee5b1d3564ef6161be132eb6ee5e6995bb6db36b10822b385e13f6d937": {
      "address": "0xded3f7A5Ab8DE0E315139D5C801867ff2F333b9a",
      "txHash": "0xe19fd7578d573c2c0322ad8de1b842e6d04b4f75527b609959fbc382c57fc059",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "BaseRelayRecipient",
            "label": "_trustedForwarder",
            "type": "t_address",
            "src": "../@opengsn/contracts/src/BaseRelayRecipient.sol:16"
          },
          {
            "contract": "ViridianNFT",
            "label": "numMinted",
            "type": "t_struct(Counter)13225_storage",
            "src": "ViridianNFT.sol:47"
          },
          {
            "contract": "ViridianNFT",
            "label": "dropId",
            "type": "t_struct(Counter)13225_storage",
            "src": "ViridianNFT.sol:48"
          },
          {
            "contract": "ViridianNFT",
            "label": "tokenDropId",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "ViridianNFT.sol:50"
          },
          {
            "contract": "ViridianNFT",
            "label": "openingUnlocked",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "ViridianNFT.sol:53"
          },
          {
            "contract": "ViridianNFT",
            "label": "allowWhitelistMinting",
            "type": "t_bool",
            "src": "ViridianNFT.sol:54"
          },
          {
            "contract": "ViridianNFT",
            "label": "allowPublicMinting",
            "type": "t_bool",
            "src": "ViridianNFT.sol:55"
          },
          {
            "contract": "ViridianNFT",
            "label": "_whitelist",
            "type": "t_mapping(t_address,t_uint8)",
            "src": "ViridianNFT.sol:57"
          },
          {
            "contract": "ViridianNFT",
            "label": "maxMintAmt",
            "type": "t_uint16",
            "src": "ViridianNFT.sol:60"
          },
          {
            "contract": "ViridianNFT",
            "label": "mintPrice",
            "type": "t_uint256",
            "src": "ViridianNFT.sol:63"
          },
          {
            "contract": "ViridianNFT",
            "label": "isOpened",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "ViridianNFT.sol:66"
          },
          {
            "contract": "ViridianNFT",
            "label": "hashedTokenIds",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "ViridianNFT.sol:69"
          },
          {
            "contract": "ViridianNFT",
            "label": "admins",
            "type": "t_mapping(t_address,t_bool)",
            "src": "ViridianNFT.sol:72"
          },
          {
            "contract": "ViridianNFT",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "ViridianNFT.sol:75"
          },
          {
            "contract": "ViridianNFT",
            "label": "versionRecipient",
            "type": "t_string_storage",
            "src": "ViridianNFT.sol:77"
          },
          {
            "contract": "ViridianNFT",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "ViridianNFT.sol:116"
          },
          {
            "contract": "ViridianNFT",
            "label": "_baseURIextended",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "ViridianNFT.sol:121"
          },
          {
            "contract": "ViridianNFT",
            "label": "_baseURIextendedOpened",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "ViridianNFT.sol:124"
          }
        ],
        "types": {
          "t_struct(Counter)13225_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint8)": {
            "label": "mapping(address => uint8)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "25741baaf9434a7b3ac5dd9e5dbfec41b6cf96082bfa3a9b1ca0bf955c2f7582": {
      "address": "0x9fdFF0BdB7BAd64de108086A54056429E7950273",
      "txHash": "0xbbf1648af1829a510d8fc35b41a5b5a8105ff695d89c2262c7c3e452b0b62ac7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "BaseRelayRecipient",
            "label": "_trustedForwarder",
            "type": "t_address",
            "src": "../@opengsn/contracts/src/BaseRelayRecipient.sol:16"
          },
          {
            "contract": "ViridianNFT",
            "label": "numMinted",
            "type": "t_struct(Counter)13225_storage",
            "src": "ViridianNFT.sol:47"
          },
          {
            "contract": "ViridianNFT",
            "label": "dropId",
            "type": "t_struct(Counter)13225_storage",
            "src": "ViridianNFT.sol:48"
          },
          {
            "contract": "ViridianNFT",
            "label": "tokenDropId",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "ViridianNFT.sol:50"
          },
          {
            "contract": "ViridianNFT",
            "label": "openingUnlocked",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "ViridianNFT.sol:53"
          },
          {
            "contract": "ViridianNFT",
            "label": "allowWhitelistMinting",
            "type": "t_bool",
            "src": "ViridianNFT.sol:54"
          },
          {
            "contract": "ViridianNFT",
            "label": "allowPublicMinting",
            "type": "t_bool",
            "src": "ViridianNFT.sol:55"
          },
          {
            "contract": "ViridianNFT",
            "label": "_whitelist",
            "type": "t_mapping(t_address,t_uint8)",
            "src": "ViridianNFT.sol:57"
          },
          {
            "contract": "ViridianNFT",
            "label": "maxMintAmt",
            "type": "t_uint16",
            "src": "ViridianNFT.sol:60"
          },
          {
            "contract": "ViridianNFT",
            "label": "mintPrice",
            "type": "t_uint256",
            "src": "ViridianNFT.sol:63"
          },
          {
            "contract": "ViridianNFT",
            "label": "isOpened",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "ViridianNFT.sol:66"
          },
          {
            "contract": "ViridianNFT",
            "label": "hashedTokenIds",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "ViridianNFT.sol:69"
          },
          {
            "contract": "ViridianNFT",
            "label": "admins",
            "type": "t_mapping(t_address,t_bool)",
            "src": "ViridianNFT.sol:72"
          },
          {
            "contract": "ViridianNFT",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "ViridianNFT.sol:75"
          },
          {
            "contract": "ViridianNFT",
            "label": "versionRecipient",
            "type": "t_string_storage",
            "src": "ViridianNFT.sol:77"
          },
          {
            "contract": "ViridianNFT",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "ViridianNFT.sol:116"
          },
          {
            "contract": "ViridianNFT",
            "label": "_baseURIextended",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "ViridianNFT.sol:121"
          },
          {
            "contract": "ViridianNFT",
            "label": "_baseURIextendedOpened",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "ViridianNFT.sol:124"
          }
        ],
        "types": {
          "t_struct(Counter)13225_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint8)": {
            "label": "mapping(address => uint8)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0beb41f805ac6526709bfcf69a57ee8189311f3aa3c07157dcf985b22141512b": {
      "address": "0xeAABfaf18b60fEcc299631c77E2FBB03507cfF99",
      "txHash": "0x077b78e054313cbc4714a8c7788229e21eebf7c87c359de380e4325d7125cef1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "BaseRelayRecipient",
            "label": "_trustedForwarder",
            "type": "t_address",
            "src": "../@opengsn/contracts/src/BaseRelayRecipient.sol:16"
          },
          {
            "contract": "ViridianNFT",
            "label": "numMinted",
            "type": "t_struct(Counter)13208_storage",
            "src": "ViridianNFT.sol:48"
          },
          {
            "contract": "ViridianNFT",
            "label": "dropId",
            "type": "t_struct(Counter)13208_storage",
            "src": "ViridianNFT.sol:49"
          },
          {
            "contract": "ViridianNFT",
            "label": "tokenDropId",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "ViridianNFT.sol:51"
          },
          {
            "contract": "ViridianNFT",
            "label": "openingUnlocked",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "ViridianNFT.sol:54"
          },
          {
            "contract": "ViridianNFT",
            "label": "allowWhitelistMinting",
            "type": "t_bool",
            "src": "ViridianNFT.sol:55"
          },
          {
            "contract": "ViridianNFT",
            "label": "allowPublicMinting",
            "type": "t_bool",
            "src": "ViridianNFT.sol:56"
          },
          {
            "contract": "ViridianNFT",
            "label": "_whitelist",
            "type": "t_mapping(t_address,t_uint8)",
            "src": "ViridianNFT.sol:58"
          },
          {
            "contract": "ViridianNFT",
            "label": "maxMintAmt",
            "type": "t_uint16",
            "src": "ViridianNFT.sol:61"
          },
          {
            "contract": "ViridianNFT",
            "label": "mintPrice",
            "type": "t_uint256",
            "src": "ViridianNFT.sol:64"
          },
          {
            "contract": "ViridianNFT",
            "label": "isOpened",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "ViridianNFT.sol:67"
          },
          {
            "contract": "ViridianNFT",
            "label": "hashedTokenIds",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "ViridianNFT.sol:70"
          },
          {
            "contract": "ViridianNFT",
            "label": "admins",
            "type": "t_mapping(t_address,t_bool)",
            "src": "ViridianNFT.sol:73"
          },
          {
            "contract": "ViridianNFT",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "ViridianNFT.sol:76"
          },
          {
            "contract": "ViridianNFT",
            "label": "versionRecipient",
            "type": "t_string_storage",
            "src": "ViridianNFT.sol:78"
          },
          {
            "contract": "ViridianNFT",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "ViridianNFT.sol:118"
          },
          {
            "contract": "ViridianNFT",
            "label": "_baseURIextended",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "ViridianNFT.sol:123"
          },
          {
            "contract": "ViridianNFT",
            "label": "_baseURIextendedOpened",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "ViridianNFT.sol:126"
          }
        ],
        "types": {
          "t_struct(Counter)13208_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint8)": {
            "label": "mapping(address => uint8)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c302c7a24f181fdb735038b03a09b302636a18eb24a9d933e6fd28a43c79ef3f": {
      "address": "0xE79F1c75391905AB87681377F5781240afE715D8",
      "txHash": "0x5ae44340b56451f894729eb19ea9d0d4a7e9ccfc0adcd7ef38790a9eeb46497a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "BaseRelayRecipient",
            "label": "_trustedForwarder",
            "type": "t_address",
            "src": "../@opengsn/contracts/src/BaseRelayRecipient.sol:16"
          },
          {
            "contract": "ViridianNFTMockUpgradable",
            "label": "numMinted",
            "type": "t_struct(Counter)13208_storage",
            "src": "ViridianNFTMockUpgradable.sol:47"
          },
          {
            "contract": "ViridianNFTMockUpgradable",
            "label": "dropId",
            "type": "t_struct(Counter)13208_storage",
            "src": "ViridianNFTMockUpgradable.sol:48"
          },
          {
            "contract": "ViridianNFTMockUpgradable",
            "label": "tokenDropId",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "ViridianNFTMockUpgradable.sol:50"
          },
          {
            "contract": "ViridianNFTMockUpgradable",
            "label": "openingUnlocked",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "ViridianNFTMockUpgradable.sol:53"
          },
          {
            "contract": "ViridianNFTMockUpgradable",
            "label": "allowWhitelistMinting",
            "type": "t_bool",
            "src": "ViridianNFTMockUpgradable.sol:54"
          },
          {
            "contract": "ViridianNFTMockUpgradable",
            "label": "allowPublicMinting",
            "type": "t_bool",
            "src": "ViridianNFTMockUpgradable.sol:55"
          },
          {
            "contract": "ViridianNFTMockUpgradable",
            "label": "_whitelist",
            "type": "t_mapping(t_address,t_uint8)",
            "src": "ViridianNFTMockUpgradable.sol:57"
          },
          {
            "contract": "ViridianNFTMockUpgradable",
            "label": "maxMintAmt",
            "type": "t_uint16",
            "src": "ViridianNFTMockUpgradable.sol:60"
          },
          {
            "contract": "ViridianNFTMockUpgradable",
            "label": "mintPrice",
            "type": "t_uint256",
            "src": "ViridianNFTMockUpgradable.sol:63"
          },
          {
            "contract": "ViridianNFTMockUpgradable",
            "label": "isOpened",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "ViridianNFTMockUpgradable.sol:66"
          },
          {
            "contract": "ViridianNFTMockUpgradable",
            "label": "hashedTokenIds",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "ViridianNFTMockUpgradable.sol:69"
          },
          {
            "contract": "ViridianNFTMockUpgradable",
            "label": "admins",
            "type": "t_mapping(t_address,t_bool)",
            "src": "ViridianNFTMockUpgradable.sol:72"
          },
          {
            "contract": "ViridianNFTMockUpgradable",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "ViridianNFTMockUpgradable.sol:75"
          },
          {
            "contract": "ViridianNFTMockUpgradable",
            "label": "versionRecipient",
            "type": "t_string_storage",
            "src": "ViridianNFTMockUpgradable.sol:77"
          },
          {
            "contract": "ViridianNFTMockUpgradable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "ViridianNFTMockUpgradable.sol:117"
          },
          {
            "contract": "ViridianNFTMockUpgradable",
            "label": "_baseURIextended",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "ViridianNFTMockUpgradable.sol:122"
          },
          {
            "contract": "ViridianNFTMockUpgradable",
            "label": "_baseURIextendedOpened",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "ViridianNFTMockUpgradable.sol:125"
          }
        ],
        "types": {
          "t_struct(Counter)13208_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint8)": {
            "label": "mapping(address => uint8)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5d1af68cb0406defb5a2a2f80b0c0030a813e0defeecd912454adc41bad64b22": {
      "address": "0x1AC453fFb20dDf4d4C3c0417399fBDE5D5ffc31C",
      "txHash": "0xaa5254d2b967fa4ff37d160f510596e99a814055124524b7813fc7593cba50b1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "BaseRelayRecipient",
            "label": "_trustedForwarder",
            "type": "t_address",
            "src": "../@opengsn/contracts/src/BaseRelayRecipient.sol:16"
          },
          {
            "contract": "ViridianNFT",
            "label": "numMinted",
            "type": "t_struct(Counter)13210_storage",
            "src": "ViridianNFT.sol:48"
          },
          {
            "contract": "ViridianNFT",
            "label": "dropId",
            "type": "t_struct(Counter)13210_storage",
            "src": "ViridianNFT.sol:49"
          },
          {
            "contract": "ViridianNFT",
            "label": "tokenDropId",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "ViridianNFT.sol:51"
          },
          {
            "contract": "ViridianNFT",
            "label": "openingUnlocked",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "ViridianNFT.sol:54"
          },
          {
            "contract": "ViridianNFT",
            "label": "allowWhitelistMinting",
            "type": "t_bool",
            "src": "ViridianNFT.sol:55"
          },
          {
            "contract": "ViridianNFT",
            "label": "allowPublicMinting",
            "type": "t_bool",
            "src": "ViridianNFT.sol:56"
          },
          {
            "contract": "ViridianNFT",
            "label": "_whitelist",
            "type": "t_mapping(t_address,t_uint8)",
            "src": "ViridianNFT.sol:58"
          },
          {
            "contract": "ViridianNFT",
            "label": "maxMintAmt",
            "type": "t_uint16",
            "src": "ViridianNFT.sol:61"
          },
          {
            "contract": "ViridianNFT",
            "label": "mintPrice",
            "type": "t_uint256",
            "src": "ViridianNFT.sol:64"
          },
          {
            "contract": "ViridianNFT",
            "label": "isOpened",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "ViridianNFT.sol:67"
          },
          {
            "contract": "ViridianNFT",
            "label": "hashedTokenIds",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "ViridianNFT.sol:70"
          },
          {
            "contract": "ViridianNFT",
            "label": "admins",
            "type": "t_mapping(t_address,t_bool)",
            "src": "ViridianNFT.sol:73"
          },
          {
            "contract": "ViridianNFT",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "ViridianNFT.sol:76"
          },
          {
            "contract": "ViridianNFT",
            "label": "versionRecipient",
            "type": "t_string_storage",
            "src": "ViridianNFT.sol:78"
          },
          {
            "contract": "ViridianNFT",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "ViridianNFT.sol:118"
          },
          {
            "contract": "ViridianNFT",
            "label": "_baseURIextended",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "ViridianNFT.sol:123"
          },
          {
            "contract": "ViridianNFT",
            "label": "_baseURIextendedOpened",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "ViridianNFT.sol:126"
          }
        ],
        "types": {
          "t_struct(Counter)13210_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint8)": {
            "label": "mapping(address => uint8)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "05327fe6d602c598b0c3a8709a8cf6fc83988948fbf69b4bffb79797b60dc340": {
      "address": "0x128214aBE8938354f0B08F822555c8b48D7651d9",
      "txHash": "0x7fd03f5e50d4cf5fdaf646653d902107885852847154a2bcefe410214d77f701",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "contract": "BaseRelayRecipient",
            "label": "_trustedForwarder",
            "type": "t_address",
            "src": "../@opengsn/contracts/src/BaseRelayRecipient.sol:16"
          },
          {
            "contract": "ViridianNFT",
            "label": "numMinted",
            "type": "t_struct(Counter)13209_storage",
            "src": "ViridianNFT.sol:48"
          },
          {
            "contract": "ViridianNFT",
            "label": "dropId",
            "type": "t_struct(Counter)13209_storage",
            "src": "ViridianNFT.sol:49"
          },
          {
            "contract": "ViridianNFT",
            "label": "tokenDropId",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "ViridianNFT.sol:51"
          },
          {
            "contract": "ViridianNFT",
            "label": "openingUnlocked",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "ViridianNFT.sol:54"
          },
          {
            "contract": "ViridianNFT",
            "label": "allowWhitelistMinting",
            "type": "t_bool",
            "src": "ViridianNFT.sol:55"
          },
          {
            "contract": "ViridianNFT",
            "label": "allowPublicMinting",
            "type": "t_bool",
            "src": "ViridianNFT.sol:56"
          },
          {
            "contract": "ViridianNFT",
            "label": "_whitelist",
            "type": "t_mapping(t_address,t_uint8)",
            "src": "ViridianNFT.sol:58"
          },
          {
            "contract": "ViridianNFT",
            "label": "maxMintAmt",
            "type": "t_uint16",
            "src": "ViridianNFT.sol:61"
          },
          {
            "contract": "ViridianNFT",
            "label": "mintPrice",
            "type": "t_uint256",
            "src": "ViridianNFT.sol:64"
          },
          {
            "contract": "ViridianNFT",
            "label": "isOpened",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "ViridianNFT.sol:67"
          },
          {
            "contract": "ViridianNFT",
            "label": "hashedTokenIds",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "ViridianNFT.sol:70"
          },
          {
            "contract": "ViridianNFT",
            "label": "admins",
            "type": "t_mapping(t_address,t_bool)",
            "src": "ViridianNFT.sol:73"
          },
          {
            "contract": "ViridianNFT",
            "label": "treasury",
            "type": "t_address_payable",
            "src": "ViridianNFT.sol:76"
          },
          {
            "contract": "ViridianNFT",
            "label": "versionRecipient",
            "type": "t_string_storage",
            "src": "ViridianNFT.sol:78"
          },
          {
            "contract": "ViridianNFT",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "ViridianNFT.sol:118"
          },
          {
            "contract": "ViridianNFT",
            "label": "_baseURIextended",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "ViridianNFT.sol:123"
          },
          {
            "contract": "ViridianNFT",
            "label": "_baseURIextendedOpened",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "ViridianNFT.sol:126"
          }
        ],
        "types": {
          "t_struct(Counter)13209_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint8)": {
            "label": "mapping(address => uint8)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
